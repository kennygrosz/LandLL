setwd('/Users/lorenzgahn/Documents/CaamSeniorDesign')
install.packages("xlsx")
library("xlsx")
#read raw data, call it 'dat'
dat = read.xlsx('Image Features Liver Masks 20ttp cases anonymized.xlsx',sheetIndex = 1)
#filter to only LabelID=1
dat_Label1 = subset(dat,dat$LabelID==1)
#Make separate data fram with columns that are constant across all rows for a patient
dat_constant = unique(dat_Label1[,c('Pt.ID','Count','Volume','ExtentX','ExtentY','ExtentZ')])
#Subset to only the columns that aren't in dat_constant above
dat_Label1 = dat_Label1[,c(1,2,3,4,5,6)]
#reshape data that isn't constant across all rows for a patient
dat_reshape = reshape(dat_Label1,idvar="Pt.ID",timevar = "FeatureID",direction="wide")
#join two data frames together on patient ID
dat_rawclean = merge(dat_reshape,dat_constant,by.x = "Pt.ID",by.y = "Pt.ID")
#vector with names of columns
cols = colnames(dat_rawclean)
#specify that all columns except Pt.ID will be scaled
scalevars = setdiff(cols,"Pt.ID")
#Scale columns (z-scores)
dat_scaled = data.frame(sapply(dat_rawclean[,scalevars],scale),Pt.ID=dat_rawclean[,"Pt.ID"])
#Move Patient ID column to first
PtID_idx = grep("Pt.ID",colnames(dat_scaled))
dat_scaled = dat_scaled[,c(PtID_idx, (1:ncol(dat_scaled))[-PtID_idx])]
#remove columns that are entirely full of Na's
dat_scaled = dat_scaled[,colSums(is.na(dat_scaled)) != nrow(dat_scaled)]
#Show NA count for each column
na_count = sapply(dat_scaled,function(y) sum(length(which(is.na(y)))))
na_count=data.frame(na_count)
#replace na's with 0
dat_scaled[is.na(dat_scaled)] = 0
#run pca
pca = prcomp(dat_scaled[,2:402])
#summary of pca results
summary(pca)
rot = pca$rotation
rot = data.frame(rot)
pcaCharts(pca)
install.packages("factoextra")
library("factoextra")
#Plot of importance of each PC
fviz_screeplot(pca,ncp=20)
#Plot with top contributing variable to PC1
fviz_pca_contrib(pca,choice = "var",axes=2,xlab="variable",top=10)
dat_scaled = data.frame(sapply(dat_rawclean[,scalevars],scale),Pt.ID=dat_rawclean[,"Pt.ID"])
dat_scaled = dat_scaled[,colSums(is.na(dat_scaled)) != nrow(dat_scaled)]
scalevars = setdiff(cols,"Pt.ID")
dat_scaled = data.frame(sapply(dat_rawclean[,scalevars],scale),Pt.ID=dat_rawclean[,"Pt.ID"])
