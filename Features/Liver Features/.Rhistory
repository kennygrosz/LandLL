mean_arr_delay[i]=mean(select(temp,arr_delay))
}
carriers=unique(Q9$carrier)
mean_dep_delay=c()
mean_arr_delay=c()
for (i in length(carriers)) {
temp=filter(Q9, carrier==carriers[i], !is.na(arr_delay))
mean_arr_delay[i]=mean(select(temp,arr_delay))
}
carriers=unique(Q9$carrier)
carriers
carriers
mean_arr_delay=c()
for (i in seq(1,length(carriers))) {
temp=filter(Q9, carrier==carriers[i], !is.na(arr_delay))
mean_arr_delay[i]=mean(select(temp,arr_delay))
}
temp=filter(Q9, carrier==carriers[3], !is.na(arr_delay))
filter(temp, is.na(arr_delay))
select(temp, arr_delay)
mean(temp$arr_delay)
for (i in seq(1,length(carriers))) {
temp=filter(Q9, carrier==carriers[i], !is.na(arr_delay))
mean_arr_delay[i]=mean(temp$arr_delay)
}
mean_arr_delay
carriers=c(unique(Q9$carrier),unique(Q9$carrier),unique(Q9$carrier))
carriers
diff_df=c()
#build vectors for mean arrival delays based on difficults
for (j in c("1","2","3")) {
for (i in seq(1,length(carriers))) {
temp=filter(Q9, carrier==carriers[i], !is.na(arr_delay))
mean_arr_delay[i]=mean(temp$arr_delay)
diff_df[i]=j
}}
diff_df
mean_arr_delay
diff_uniq=c("1","2","3")
diff_uniq=c("1","2","3")
mean_arr_delay=c()
diff_df=c()
#build vectors for mean arrival delays based on difficults
for (j in seq(1,3)) {
for (i in seq(1,length(carriers))) {
temp=filter(Q9, carrier==carriers[i], !is.na(arr_delay), dep_difficulty2==diff_uniq(j))
mean_arr_delay[(j-1)*length(carriers)+i]=mean(temp$arr_delay)
diff_df[(j-1)*length(carriers)+i]=j
}}
diff_df
mean_arr_delay=c()
diff_df=c()
#build vectors for mean arrival delays based on difficults
for (j in seq(1,3)) {
for (i in seq(1,length(carriers))) {
temp=filter(Q9, carrier==carriers[i], !is.na(arr_delay), dep_difficulty2==diff_uniq[j])
mean_arr_delay[(j-1)*length(carriers)+i]=mean(temp$arr_delay)
diff_df[(j-1)*length(carriers)+i]=j
}}
diff_df
mean_arr_delay
for (j in seq(1,3)) {
for (i in seq(1,length(carriers))) {
temp=filter(Q9, carrier==carriers[i], !is.na(arr_delay), dep_difficulty2==diff_uniq[j])
mean_arr_delay[(j-1)*length(carriers)/3+i]=mean(temp$arr_delay)
diff_uniq=c("1","2","3")
mean_arr_delay=c()
diff_df=c()
#build vectors for mean arrival delays based on difficults
for (j in seq(1,3)) {
for (i in seq(1,length(carriers))) {
temp=filter(Q9, carrier==carriers[i], !is.na(arr_delay), dep_difficulty2==diff_uniq[j])
mean_arr_delay[(j-1)*length(carriers)/3+i]=mean(temp$arr_delay)
diff_df[(j-1)*length(carriers)/3+i]=j
}}
diff_df
mean_arr_delay
}
mean_arr_delay
ggplot(Q9, aes(carrier, dep_difficulty2)) + geom_tile(aes(fill=dep_delay))
```
mean_arr_delay=c()
diff_df=c()
#build vectors for mean arrival delays based on difficults
for (j in seq(1,3)) {
for (i in seq(1,length(carriers))) {
temp=filter(Q9, carrier==carriers[i], !is.na(arr_delay), dep_difficulty2==diff_uniq[j])
mean_arr_delay[(j-1)*length(carriers)/3+i]=mean(temp$arr_delay)
diff_df[(j-1)*length(carriers)/3+i]=j
}}
diff_df
mean_arr_delay
difficulty_df=data.frame(carriers,diff_df,mean_arr_delay)
mean_arr_delay=c()
diff_df=c()
diff_df
mean_arr_delay
for (j in seq(1,3)) {
for (i in seq(1,length(carriers)/3)) {
temp=filter(Q9, carrier==carriers[i], !is.na(arr_delay), dep_difficulty2==diff_uniq[j])
mean_arr_delay[(j-1)*length(carriers)/3+i]=mean(temp$arr_delay)
diff_df[(j-1)*length(carriers)/3+i]=j
}}
diff_df
mean_arr_delay
difficulty_df=data.frame(carriers,diff_df,mean_arr_delay)
ggplot(difficulty_df, aes(carriers, diff_df)) + geom_tile(aes(fill=mean_arr_delay))
carriers=c(unique(Q9$carrier))
mean_arr_delay=c()
for (i in seq(1,length(carriers))) {
temp = filter(Q9, !is.na(arr_delay), carrier=carriers[i])
mean_arr_delay=mean(temp$arr_delay)
}
carriers=c(unique(Q9$carrier))
mean_arr_delay=c()
for (i in seq(1,length(carriers))) {
mean_arr_delay=mean(temp$arr_delay)
}
temp = filter(Q9, !is.na(arr_delay), carrier==carriers[i])
mean_arr_delay
mean_arr_delay[i]=mean(temp$arr_delay)
mean_arr_delay=c()
for (i in seq(1,length(carriers))) {
temp = filter(Q9, !is.na(arr_delay), carrier==carriers[i])
mean_arr_delay[i]=mean(temp$arr_delay)
}
mean_arr_delay
mean_arr_delay=c()
mean_dep_delay=c()
for (i in seq(1,length(carriers))) {
temp = filter(Q9, !is.na(arr_delay), !is.na(mean_dep_delay), carrier==carriers[i])
mean_arr_delay[i]=mean(temp$arr_delay)
}
mean_arr_delay=c()
mean_dep_delay=c()
for (i in seq(1,length(carriers))) {
temp = filter(Q9, !is.na(arr_delay), !is.na(dep_delay), carrier==carriers[i])
mean_dep_delay[i]=mean(temp$arr_delay)
}
mean_arr_delay[i]=mean(temp$arr_delay)
mean_arr_delay
mean_arr_delay=c()
mean_dep_delay=c()
for (i in seq(1,length(carriers))) {
temp = filter(Q9, !is.na(arr_delay), !is.na(dep_delay), carrier==carriers[i])
mean_arr_delay[i]=mean(temp$arr_delay)
mean_dep_delay[i]=mean(temp$dep_delay)
}
mean_arr_delay
mean_dep_delay
summary_df=data.frame(carriers,mean_dep_delay,mean_arr_delay)
summary_df
mutate(summary_df, diff=mean_arr_delay-mean_dep_delap)
mutate(summary_df, diff=mean_arr_delay-mean_dep_delay)
mutate(summary_df, made_up_time=mean_dep_delay-mean_arr_delay)
ggplot(summary_df, aes(carriers, y = arrange(mean_dep_delay, desc())))
ggplot(summary_df, aes(carriers, y = arrange(summary_df,desc(mean_dep_delay))))
ggplot(summary_df, aes(carriers, y = arrange(summary_df,desc(mean_dep_delay))))+ geom_bar(stat='identity')
ggplot(summary_df, aes(x=carriers, y = arrange(summary_df,desc(mean_dep_delay))))+ geom_bar(stat='identity')
summary_df=arrange(summary_df, desc(mean_dep_delay))
ggplot(summary_df, aes(x=carriers, mean_dep_delay)) +  geom_bar(stat='identity')
summary_df=arrange(summary_df, desc(mean_dep_delay))
summary_df=arrange(summary_df, desc(mean_dep_delay))
# plot which airlines are best at getting off the ground on time
ggplot(summary_df, aes(x=carriers, mean_dep_delay)) +  geom_bar(stat='identity')
ggplot(summary_df, aes(x=carriers, mean_dep_delay, fill = mean_dep_delay) +  geom_bar(stat='identity')
ggplot(summary_df, aes(x=carriers, mean_dep_delay, fill = mean_dep_delay)) +  geom_bar(stat='identity')
ggplot(summary_df, aes(x=carriers, mean_dep_delay)) +  geom_bar(stat='identity')
ggplot(summary_df, aes(x=carriers, mean_dep_delay)) +  geom_bar(stat='identity')
ggplot(summary_df, aes(x=carriers, mean_dep_delay)) +  geom_bar(stat='identity',aes(fill=mean_dep_delay))
ggplot(summary_df, aes(x=reorder(carriers, -mean_dep_delay), mean_dep_delay)) +  geom_bar(stat='identity',aes(fill=mean_dep_delay))
ggplot(summary_df, aes(x=reorder(carriers, -mean_dep_delay), mean_dep_delay)) +  geom_bar(stat='identity',aes(fill=mean_dep_delay))+ylab("Mean Departure Delay (min)") + xlab("Carriers")+ggtitle("Airline Departure Delay Times")
ggplot(summary_df, aes(x=reorder(carriers, -mean_dep_delay), mean_dep_delay)) +  geom_bar(stat='identity',aes(fill=mean_dep_delay))+ylab("Mean Departure Delay (min)") + xlab("Carriers")+ggtitle("Airline Departure Delay Times")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, -mean_arr_delay), mean_arr_delay)) +  geom_bar(stat='identity',aes(fill=mean_arr_delay))+ylab("Mean Arrival Delay (min)") + xlab("Carriers")+ggtitle("Airline Arrival Delay Times")+theme(legend.position="none")
mean_arr_delay
mean_dep_delay
ggplot(summary_df, aes(x=reorder(carriers, -made_up_time), made_up_time)) +  geom_bar(stat='identity',aes(fill=made_up_time))+ylab("Time Made up in the Air (min)") + xlab("Carriers")+ggtitle("Amount of Time Made Up In The Air")+theme(legend.position="none")
mutate(summary_df, made_up_time=mean_dep_delay-mean_arr_delay)
summary_df=arrange(summary_df, desc(mean_dep_delay))
# plot which airlines are best at getting off the ground on time
ggplot(summary_df, aes(x=reorder(carriers, -mean_dep_delay), mean_dep_delay)) +  geom_bar(stat='identity',aes(fill=mean_dep_delay))+ylab("Mean Departure Delay (min)") + xlab("Carriers")+ggtitle("Airline Departure Delay Times")+theme(legend.position="none")
# plot which airlines are best at arriving on time
ggplot(summary_df, aes(x=reorder(carriers, -mean_arr_delay), mean_arr_delay)) +  geom_bar(stat='identity',aes(fill=mean_arr_delay))+ylab("Mean Arrival Delay (min)") + xlab("Carriers")+ggtitle("Airline Arrival Delay Times")+theme(legend.position="none")
# plot which airlines are best at making up time in the air
ggplot(summary_df, aes(x=reorder(carriers, -made_up_time), made_up_time)) +  geom_bar(stat='identity',aes(fill=made_up_time))+ylab("Time Made up in the Air (min)") + xlab("Carriers")+ggtitle("Amount of Time Made Up In The Air")+theme(legend.position="none")
summary_df=mutate(summary_df, made_up_time=mean_dep_delay-mean_arr_delay)
summary_df=arrange(summary_df, desc(mean_dep_delay))
# plot which airlines are best at getting off the ground on time
ggplot(summary_df, aes(x=reorder(carriers, -mean_dep_delay), mean_dep_delay)) +  geom_bar(stat='identity',aes(fill=mean_dep_delay))+ylab("Mean Departure Delay (min)") + xlab("Carriers")+ggtitle("Airline Departure Delay Times")+theme(legend.position="none")
# plot which airlines are best at arriving on time
ggplot(summary_df, aes(x=reorder(carriers, -mean_arr_delay), mean_arr_delay)) +  geom_bar(stat='identity',aes(fill=mean_arr_delay))+ylab("Mean Arrival Delay (min)") + xlab("Carriers")+ggtitle("Airline Arrival Delay Times")+theme(legend.position="none")
# plot which airlines are best at making up time in the air
ggplot(summary_df, aes(x=reorder(carriers, -made_up_time), made_up_time)) +  geom_bar(stat='identity',aes(fill=made_up_time))+ylab("Time Made up in the Air (min)") + xlab("Carriers")+ggtitle("Amount of Time Made Up In The Air")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, -made_up_time), made_up_time)) +  geom_bar(stat='identity',aes(fill=made_up_time))+ylab("Time Made up in the Air (min)") + xlab("Carriers")+ggtitle("Amount of Time Made Up In The Air")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, -mean_arr_delay), mean_arr_delay)) +  geom_bar(stat='identity',aes(fill=mean_arr_delay))+ylab("Mean Arrival Delay (min)") + xlab("Carriers")+ggtitle("Airline Arrival Delay Times")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, -made_up_time), made_up_time)) +  geom_bar(stat='identity',aes(fill=made_up_time))+ylab("Time Made up in the Air (min)") + xlab("Carriers")+ggtitle("Amount of Time Made Up In The Air")+theme(legend.position="none")
summary_df=mutate(summary_df, score=.6*mean_arr_delay + .4*mean_dep_delay)
ggplot(summary_df, aes(x=reorder(carriers, -score), score)) +  geom_bar(stat='identity',aes(fill=score))+ylab("Time Made up in the Air (min)") + xlab("Carriers")+ggtitle("Amount of Time Made Up In The Air")+theme(legend.position="none")
mean_dep_delay=c()
flights=c()
for (i in seq(1,length(carriers))) {
temp = filter(Q9, !is.na(arr_delay), !is.na(dep_delay), carrier==carriers[i])
mean_arr_delay[i]=mean(temp$arr_delay)
mean_dep_delay[i]=mean(temp$dep_delay)
flights[i]=length(temp)
}
summary_df=data.frame(carriers,mean_dep_delay,mean_arr_delay,flights)
summary_df
flights=c()
for (i in seq(1,length(carriers))) {
temp = filter(Q9, !is.na(arr_delay), !is.na(dep_delay), carrier==carriers[i])
mean_arr_delay[i]=mean(temp$arr_delay)
mean_dep_delay[i]=mean(temp$dep_delay)
flights[i]=length(temp$carrier)
}
mean_arr_delay
mean_dep_delay
summary_df=data.frame(carriers,mean_dep_delay,mean_arr_delay,flights)
summary_df
ggplot(summary_df, aes(x=reorder(carriers, +score), score)) +  geom_bar(stat='identity',aes(fill=score))+ylab("Time Made up in the Air (min)") + xlab("Carriers")+ggtitle("Amount of Time Made Up In The Air")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, score), score)) +  geom_bar(stat='identity',aes(fill=score))+ylab("Time Made up in the Air (min)") + xlab("Carriers")+ggtitle("Amount of Time Made Up In The Air")+theme(legend.position="none")
summary_df=data.frame(carriers,mean_dep_delay,mean_arr_delay,flights)
summary_df
summary_df=mutate(summary_df, score=.6*mean_arr_delay + .4*mean_dep_delay)
ggplot(summary_df, aes(x=reorder(carriers, score), score)) +  geom_bar(stat='identity',aes(fill=score))+ylab("Time Made up in the Air (min)") + xlab("Carriers")+ggtitle("Amount of Time Made Up In The Air")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, -mean_dep_delay), mean_dep_delay)) +  geom_bar(stat='identity',aes(fill=mean_dep_delay))+ylab("Mean Departure Delay (min)") + xlab("Airline")+ggtitle("Airline Departure Delay Times")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, mean_dep_delay), mean_dep_delay)) +  geom_bar(stat='identity',aes(fill=mean_dep_delay))+ylab("Mean Departure Delay (min)") + xlab("Airline")+ggtitle("Airline Departure Delay Times")+theme(legend.position="none")
# plot which airlines are best at arriving on time
ggplot(summary_df, aes(x=reorder(carriers, mean_arr_delay), mean_arr_delay)) +  geom_bar(stat='identity',aes(fill=mean_arr_delay))+ylab("Mean Arrival Delay (min)") + xlab("Airline")+ggtitle("Airline Arrival Delay Times")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, mean_arr_delay), mean_arr_delay)) +  geom_bar(stat='identity',aes(fill=mean_arr_delay))+ylab("Mean Arrival Delay (min)") + xlab("Airline")+ggtitle("Airline Arrival Delay Times")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, mean_arr_delay), mean_arr_delay)) +  geom_bar(stat='identity',aes(fill=mean_arr_delay))+ylab("Mean Arrival Delay (min)") + xlab("Airline")+ggtitle("Airline Arrival Delay Times")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, mean_dep_delay), mean_dep_delay)) +  geom_bar(stat='identity',aes(fill=mean_dep_delay))+ylab("Mean Departure Delay (min)") + xlab("Airline")+ggtitle("Airline Departure Delay Times")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, mean_arr_delay), mean_arr_delay)) +  geom_bar(stat='identity',aes(fill=mean_arr_delay))+ylab("Mean Arrival Delay (min)") + xlab("Airline")+ggtitle("Airline Arrival Delay Times")+theme(legend.position="none")
one")
ggplot(summary_df, aes(x=reorder(carriers, mean_dep_delay), mean_dep_delay)) +  geom_bar(stat='identity',aes(fill=mean_dep_delay))+ylab("Mean Departure Delay (min)") + xlab("Airline")+ggtitle("Airline Departure Delay Times")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, mean_dep_delay), mean_dep_delay)) +  geom_bar(stat='identity',aes(fill=mean_dep_delay))+ylab("Mean Departure Delay (min)") + xlab("Airline")+ggtitle("Airline Departure Delay Times")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, mean_arr_delay), mean_arr_delay)) +  geom_bar(stat='identity',aes(fill=mean_arr_delay))+ylab("Mean Arrival Delay (min)") + xlab("Airline")+ggtitle("Airline Arrival Delay Times")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, mean_dep_delay), mean_dep_delay)) +  geom_bar(stat='identity',aes(fill=mean_dep_delay))+ylab("Mean Departure Delay (min)") + xlab("Airline")+ggtitle("Airline Departure Delay Times")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, score), score)) +  geom_bar(stat='identity',aes(fill=score))+ylab("On-Time Score") + xlab("Airline")+ggtitle("ON-TIME SCORE")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, mean_dep_delay), mean_dep_delay)) +  geom_bar(stat='identity',aes(fill=mean_dep_delay))+ylab("Mean Departure Delay (min)") + xlab("Airline")+ggtitle("Airline Departure Delay Times")+theme(legend.position="none")
# plot which airlines are best at arriving on time
ggplot(summary_df, aes(x=reorder(carriers, mean_arr_delay), mean_arr_delay)) +  geom_bar(stat='identity',aes(fill=mean_arr_delay))+ylab("Mean Arrival Delay (min)") + xlab("Airline")+ggtitle("Airline Arrival Delay Times")+theme(legend.position="none")
summary_df=mutate(summary_df, score=.7*mean_arr_delay + .3*mean_dep_delay)
# plot which airlines are best at getting off the ground on time
ggplot(summary_df, aes(x=reorder(carriers, mean_dep_delay), mean_dep_delay)) +  geom_bar(stat='identity',aes(fill=mean_dep_delay))+ylab("Mean Departure Delay (min)") + xlab("Airline")+ggtitle("Airline Departure Delay Times")+theme(legend.position="none")
# plot which airlines are best at arriving on time
ggplot(summary_df, aes(x=reorder(carriers, mean_arr_delay), mean_arr_delay)) +  geom_bar(stat='identity',aes(fill=mean_arr_delay))+ylab("Mean Arrival Delay (min)") + xlab("Airline")+ggtitle("Airline Arrival Delay Times")+theme(legend.position="none")
# plot which airlines have the best scores for being on time
ggplot(summary_df, aes(x=reorder(carriers, score), score)) +  geom_bar(stat='identity',aes(fill=score))+ylab("On-Time Score") + xlab("Airline")+ggtitle("ON-TIME SCORE")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, mean_arr_delay), mean_arr_delay)) +  geom_bar(stat='identity',aes(fill=mean_arr_delay))+ylab("Mean Arrival Delay (min)") + xlab("Airline")+ggtitle("Airline Arrival Delay Times")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, score), score)) +  geom_bar(stat='identity',aes(fill=score))+ylab("On-Time Score") + xlab("Airline")+ggtitle("ON-TIME SCORE")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, score), score)) +  geom_bar(stat='identity',aes(fill=score))+ylab("On-Time Score") + xlab("Airline")+ggtitle("Ranking Airlines Based on Punctuality Based on On-Time Score"")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, score), score)) +  geom_bar(stat='identity',aes(fill=score))+ylab("On-Time Score") + xlab("Airline")+ggtitle("Ranking Airlines Based on Punctuality Based on On-Time Score")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, score), score)) +  geom_bar(stat='identity',aes(fill=score))+ylab("On-Time Score") + xlab("Airline")+ggtitle("Ranking Airlines on Punctuality Based on On-Time Score")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, score), score)) +  geom_bar(stat='identity',positoin="identity",aes(fill=score))+ylab("On-Time Score") + xlab("Airline")+ggtitle("Ranking Airlines on Punctuality Based on On-Time Score")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, score), score)) +  geom_bar(stat='identity',position="identity",aes(fill=score))+ylab("On-Time Score") + xlab("Airline")+ggtitle("Ranking Airlines on Punctuality Based on On-Time Score")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, mean_arr_delay), mean_arr_delay)) +  geom_bar(stat='identity',aes(fill=mean_arr_delay))+ylab("Mean Arrival Delay (min)") + xlab("Airline")+ggtitle("Airline Arrival Delay Times")+theme(legend.position="none")
# plot which airlines have the best scores for being on time
ggplot(summary_df, aes(x=reorder(carriers, score), score)) +  geom_bar(stat='identity',position="identity",aes(fill=score))+ylab("On-Time Score") + xlab("Airline")+ggtitle("Ranking Airlines on Punctuality Based on On-Time Score")+theme(legend.position="none")
ggplot(summary_df, aes(x=reorder(carriers, mean_dep_delay), mean_dep_delay)) +  geom_bar(stat='identity',position="identity",aes(fill=mean_dep_delay))+ylab("Mean Departure Delay (min)") + xlab("Airline")+ggtitle("Airline Departure Delay Times")+theme(legend.position="none")
# plot which airlines are best at arriving on time
ggplot(summary_df, aes(x=reorder(carriers, mean_arr_delay), mean_arr_delay)) +  geom_bar(stat='identity',position="identity",aes(fill=mean_arr_delay))+ylab("Mean Arrival Delay (min)") + xlab("Airline")+ggtitle("Airline Arrival Delay Times")+theme(legend.position="none")
# plot which airlines have the best scores for being on time
ggplot(summary_df, aes(x=reorder(carriers, score), score)) +  geom_bar(stat='identity',position="identity",aes(fill=score))+ylab("On-Time Score") + xlab("Airline")+ggtitle("Ranking Airlines on Punctuality Based on On-Time Score")+theme(legend.position="none")
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## Set Up
1. (4 pts) Set your working directory properly and import two datasets via the following command:
```{r}
## SET WORKING DIRECTORY
setwd("C:/Users/kenny/OneDrive/Documents/Fall 2016/STAT 405- R for Data Science/Assignment 4/")
require(tidyverse)
require(forcats)
require(ggplot2)
require(stringr)
read.csv("partA.csv", header = TRUE, stringsAsFactors = FALSE) %>%
tbl_df() ->
A
read.csv("partB.csv", header = TRUE, stringsAsFactors = FALSE) %>%
B
head(A,3);head(B,3) # preview
```
tbl_df() ->
--------------------------------------------------------------------------------------
## Question 2
2. Separate A into four columns. Give them (the new columns) the following name: id, make, model, year
and proper data types. Sort the new data by id. Use one pipeline to complete the task. Print the first
5 rows.
• (4 pts) Use proper function(s) to separate the column
• (4 pts) Specify sep
• (4 pts) Proper column type conversion (int, chr, numeric, whatever you think is proper)
• (2 pts) Sort data by id
• (2 pts) One pipeline
• (2 pts) Print the result
```{r}
#separate into 4 columns
A=data.frame(A)
head(A2,5) #preview reusults
A2 = A %>% separate(id.make.model.year,into =c("id","make","model","year"), sep = c("\\?\\?\\?\\?\\?"), convert = TRUE ) %>% arrange(id)
```
--------------------------------------------------------------------------------------
3. Data B has a column Variable, which contains these factors: class, trans, drive, cyl, displ,
fuel, hwy, cty. Spread this column into several columns. Sort the data by id and print the first 5
rows.
• (4 pts) Use proper function(s) to spread the column
• (2 pts) Sort data by id
• (4 pts) Proper column type conversion (int, chr, numeric, whatever you think is proper)
• (2 pts) Print the result
``` {r}
B2 = B %>% spread(key =Variable, value = value, convert = TRUE) %>% arrange(id)
head(B2,5)
```
--------------------------------------------------------------------------------------
4. Merge A, B into one table by id (compare right join, left join, inner join, full join). Order by id and print them out, explain the difference. Select result for full joined table, name the table cars.
(8 pts) 2 points for each join type.
(4 pts) 4 × 1 point for sorting data by id
``` {r}
right_join = right_join(A2,B2, by = "id") %>% arrange(id)
left_join = left_join(A2,B2, by = "id") %>% arrange(id)
inner_join = inner_join(A2,B2, by = "id") %>% arrange(id)
head(right_join,5)
head(left_join,5)
head(inner_join,5)
head(full_join,5)
cars = full_join
full_join = full_join(A2,B2, by = "id") %>% arrange(id)
B2 = B %>% spread(key =Variable, value = value, convert = TRUE) %>% arrange(id)
head(B2,5)
A
read.csv("partB.csv", header = TRUE, stringsAsFactors = FALSE) %>%
tbl_df() ->
B
head(A,3);head(B,3) # preview
B2 = B %>% spread(key =Variable, value = value, convert = TRUE) %>% arrange(id)
head(B2,5)
right_join = right_join(A2,B2, by = "id") %>% arrange(id)
inner_join = inner_join(A2,B2, by = "id") %>% arrange(id)
left_join = left_join(A2,B2, by = "id") %>% arrange(id)
head(right_join,5)
head(left_join,5)
full_join = full_join(A2,B2, by = "id") %>% arrange(id)
head(inner_join,5)
head(full_join,5)
cars = full_join
```
cars2 = cars %>% fill(make, model, year, class, cty, cyl, displ, drive, fuel, hwy, trans, .direction = "up")
head(cars2,5)
unique(cars2$trans)
cars 3 = cars2 %>% str_replace("Auto","Automatic")
cars_3 = cars2 %>% str_replace("Auto","Automatic")
unique(cars_3$trans)
A2 = A
A2 = A %>%
separate(id.make.model.year,into =c("id","make","model","year"), sep = c("\\?\\?\\?\\?\\?"), convert = TRUE ) %>%
arrange(id)
head(A2,5) #preview reusults
unique(cars2$trans)
cars3= cars2$trans %>% str_replace_all("Auto","Automatic")
cars3=cars2
cars3$trans= cars2$trans %>% str_replace_all("Auto","Automatic")
unique(cars3$trans)
cars3=cars2
cars3$trans= cars2$trans %>% str_replace_all("Auto(","Automatic")
unique(cars2$trans)
cars3=cars2
cars3$trans= cars2$trans %>% str_replace_all("Auto(","Automatic")
cars3$trans= cars2$trans %>% str_replace_all("Auto\(","Automatic")
cars3$trans= cars2$trans %>% str_replace_all("Auto ","Automatic")
unique(cars3$trans)
B2 = B %>% spread(key =Variable, value = value, convert = TRUE)
%>% arrange(id)
head(B2,5)
unique(cars2$trans)
cars3=cars2
cars3$trans= cars2$trans %>% str_replace_all("Auto ","Automatic")
unique(cars3$trans)
cars3$trans = cars2$trans %>%
gsub("Auto\([*.]\)","Automatic\([*.]\)")
cars3$trans = cars2$trans %>%
gsub("Auto/([*.]/)","Automatic/([*.]/)")
cars3=cars2
cars3$trans = cars2$trans %>%
gsub("Auto\(.*\)","Automatic\(.*\)")
cars3$trans = cars2$trans %>%
gsub("Auto\\(.*\\)","Automatic\\(.*\\)")
cars3$trans = cars2$trans %>%
gsub("Auto\\(.*\\)","Automatic\\(.*\\)", x = TRUE)
cars3$trans = cars2$trans %>%
string_replace_all("Auto\\(.*\\)","Automatic\\(.*\\)")
cars3$trans = cars2$trans %>%
str_replace_all("Auto\\(.*\\)","Automatic\\(.*\\)")
unique(cars3$trans)
cars3$trans = cars2$trans %>%
str_replace_all("Auto\s*\\(.*\\)","Automatic\\(.*\\)") %>%
cars3$trans = cars2$trans %>%
str_replace_all("Auto\\s*\\(.*\\)","Automatic\\(.*\\)") %>%
str_replace_all("\\(.*\\), ")
cars3$trans= cars2$trans %>% str_replace_all("Auto\(.*\)","Automatic\(.*\)")
cars3$trans = cars2$trans %>%
#str_replace_all("Auto\\(.*\\)","Automatic\\(.*\\)") %>%
str_replace_all("Auto\\s*\\(.*\\)","Automatic\\(.*\\)")
unique(cars3$trans)
cars3$trans = cars2$trans %>%
str_replace_all("Auto\\s*\\(.*\\)","Automatic\\(.*\\)") %>%
str_replace_all("\\(","") %>%
str_replace_all("\\)","") %>%
str_replace_all("\\-","")
unique(cars3$trans)
cars3$trans = cars2$trans %>%
str_replace_all("Auto\\s*\\(","Automatic\\(") %>%
str_replace_all("\\(","") %>%
str_replace_all("\\)","") %>%
str_replace_all("\\-","")
unique(cars3$trans)
cars3$trans = cars2$trans %>%
str_replace_all("\\(","") %>%
str_replace_all("\\)","") %>%
str_replace_all("Auto\\s*\\(","Automatic\\s\\(") %>%
str_replace_all("\\-","")
str_replace_all("\\-","") %>%
unique(cars3$trans)
unique(cars3$trans)
unique(cars2$trans)
cars3=cars2
cars3$trans = cars2$trans %>%
str_replace_all("Auto\\s*\\(","Automatic\\s\\(") %>%
str_replace_all("\\(","") %>%
str_replace_all("\\)","") %>%
str_replace_all("\\-","")
unique(cars3$trans)
cars3$trans = cars2$trans %>%
str_replace_all("Auto\\s*\\(","Automatic\\s\\(")
unique(cars3$trans)
unique(cars2$trans)
cars3$trans = cars2$trans %>%
str_replace_all("Auto\\s*\\(","Automatic \\(")
unique(cars3$trans)
cars3$trans = cars2$trans %>%
str_replace_all("Auto\\s*\\(","Automatic \\(") %>%
str_replace_all("\\(","") %>%
str_replace_all("\\)","") %>%
str_replace_all("\\-","")
unique(cars3$trans)
cars3=cars2
cars3$trans = cars2$trans %>%
str_replace_all("Auto\\s*\\(","Automatic \\(") %>%
str_replace_all("Manual\\(","Manual \\(") %>%
str_replace_all("\\(","") %>%
str_replace_all("\\)","") %>%
str_replace_all("\\-","")
unique(cars3$trans)
cars3=cars2
cars3$trans = cars2$trans %>%
str_replace_all("Auto\\s*\\(","Automatic \\(") %>%
str_replace_all("Manual\\(","Manual \\(") %>%
str_replace_all("\\(","") %>%
str_replace_all("\\)","") %>%
str_replace_all("\\-","") %>%
str_replace_all("\s","") %>%
str_replace_all("Manual","Manual ") %>%
str_replace_all("Automatic","Automatic ")
unique(cars3$trans)
cars3$trans = cars2$trans %>%
str_replace_all("Auto\\s*\\(","Automatic \\(") %>%
str_replace_all("Manual\\(","Manual \\(") %>%
str_replace_all("\\(","") %>%
str_replace_all("\\)","") %>%
str_replace_all("\\-","") %>%
str_replace_all("\s","") %>%
str_replace_all("Manual","Manual ") %>%
unique(cars3$trans)
cars3$trans = cars2$trans %>%
str_replace_all("Auto\\s*\\(","Automatic \\(") %>%
str_replace_all("Manual\\(","Manual \\(") %>%
str_replace_all("\\(","") %>%
str_replace_all("\\)","") %>%
str_replace_all("\\-","") %>%
str_replace_all("\\s","") %>%
str_replace_all("Manual","Manual ") %>%
str_replace_all("Automatic","Automatic ")
unique(cars3$trans)
A2 = A %>%
separate(id.make.model.year,into =c("id","make","model","year"),
sep = c("\\?\\?\\?\\?\\?"), convert = TRUE ) %>%
arrange(id)
head(A2,5) #preview results
library(dplyr)
library(ggplot2)
#Get T_df dataset
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set directory to current directory
setwd("../../SuperMatrix/")
source("MatrixBuilder2.R")
setwd("../Features/Liver Features")
head(T_df)
Liver = filter(T_df,LiverMask==1, Pre > -200, Art > -200, Ven > -200, Del > -200)
Tumor = filter(T_df, TumorMask == 1, Pre > -200, Art > -200, Ven > -200, Del > -200)
Liver = mutate(Liver, new = Art - Pre)
Tumor = mutate(Tumor, new= Art - Pre)
ggplot(Liver) + geom_area(aes(Pre),stat="bin",color="red", fill="red",alpha=.5,binwidth=10)+
geom_area(aes(Art),stat="bin", fill="green",color="green",alpha=.5,binwidth=10) +
geom_area(aes(Ven),stat="bin", fill="pink",color="pink",alpha=.5,binwidth=10)  +
geom_area(aes(Del),stat="bin", fill="blue",color="blue",alpha=.5,binwidth=10) +
geom_area(data = Tumor, aes(Pre),stat="bin", fill="red",color="red",alpha=.5,binwidth=10) +
geom_area(data = Tumor, aes(Art),stat="bin", fill="green",color="green",alpha=.5,binwidth=10) +
geom_area(data = Tumor, aes(Ven),stat="bin", fill="pink",color="pink",alpha=.5,binwidth=10) +
geom_area(data = Tumor, aes(Del),stat="bin", fill="blue",color="blue",alpha=.5,binwidth=10) +
annotate("text", x=40, y = 110000, label = "Pre") +
annotate("text", x=83, y = 95000, label = "Art") +
annotate("text", x=107, y = 77000, label = "Del") +
annotate("text", x=140, y = 70000, label = "Ven") +
labs(title="Liver and Tumor Histograms, 4 phases", x="HU" , y="Frequency")
